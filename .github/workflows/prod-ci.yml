name: Publish NuGet Package

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ["6.0.x", "7.0.x", "8.0.x", "9.0.x"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Test
        run: dotnet test --no-restore --configuration Release --verbosity normal

  build-and-publish:
    runs-on: ubuntu-latest
    needs: test

    permissions:
      contents: write
      packages: write

    steps:
      # 1. Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Setup .NET environment
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      # 3. Restore dependencies
      - name: Restore dependencies
        run: dotnet restore

      # 4. Build project
      - name: Build
        run: dotnet build --configuration Release --no-restore

      # 5. Run tests
      - name: Test
        run: dotnet test --no-restore --verbosity normal

      # 6. Extract version from csproj
      - name: Get version from csproj
        id: get_version
        run: |
          VERSION=$(grep -oP '<Version>\K[^<]+' DecoratR/DecoratR.csproj)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      # 7. Create packages/artifacts
      - name: Pack
        run: dotnet pack --no-build --configuration Release --output ./artifacts

      # 8. Create GitHub release
      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          name: Release v${{ steps.get_version.outputs.version }}
          generate_release_notes: true
          files: ./artifacts/*.nupkg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 9. Publish to NuGet.org
      - name: Publish to NuGet.org
        run: dotnet nuget push "./artifacts/*.nupkg" --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
        if: success()
